{"version":3,"sources":["components/Filter.js","services/phonebook.js","components/PersonForm.js","components/Person.js","components/Message.js","App.js","index.js"],"names":["Filter","filter","setFilter","value","onChange","e","target","baseUrl","phonebookService","getAllPersons","axios","get","then","res","data","createPerson","p","post","deletePerson","delete","id","updatePerson","newNumber","changedPerson","number","put","PersonForm","persons","setPersons","setMessage","useState","newName","setNewName","setNewNumber","cleanUp","onSubmit","preventDefault","personObject","name","found","find","window","confirm","map","type","content","catch","message","promptAndUpdate","concat","Person","person","onClick","Message","useEffect","timeout","setTimeout","clearTimeout","className","App","toLowerCase","includes","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.7b5c261d.chunk.js","sourcesContent":["const Filter = ({ filter, setFilter }) => {\n  const handleFilterChange = (e) => {\n    setFilter(e.target.value);\n  };\n\n  return (\n    <p>\n      filter shown with\n      <input value={filter} onChange={handleFilterChange} />\n    </p>\n  );\n};\n\nexport default Filter;\n","import axios from \"axios\";\n\nconst baseUrl = \"/api/persons\";\n\nconst getAllPersons = () => {\n  return axios.get(baseUrl).then((res) => res.data);\n};\n\nconst createPerson = (p) => {\n  return axios.post(baseUrl, p).then((res) => res.data);\n};\n\nconst deletePerson = (p) => {\n  return axios.delete(`${baseUrl}/${p.id}`);\n};\n\nconst updatePerson = (p, newNumber) => {\n  const changedPerson = { ...p, number: newNumber };\n  return axios.put(`${baseUrl}/${p.id}`, changedPerson);\n};\n\nconst phonebookService = {\n  getAllPersons,\n  createPerson,\n  deletePerson,\n  updatePerson,\n};\n\nexport default phonebookService;\n","import { useState } from \"react\";\nimport phonebookService from \"../services/phonebook.js\";\n\nconst PersonForm = ({ persons, setPersons, setMessage }) => {\n  const [newName, setNewName] = useState(\"\");\n  const [newNumber, setNewNumber] = useState(\"\");\n\n  const cleanUp = () => {\n    setNewName(\"\");\n    setNewNumber(\"\");\n  };\n\n  const promptAndUpdate = (found) => {\n    if (\n      window.confirm(\n        `${found.name} is already added to phonebook, replace the old number with a new one?`\n      )\n    ) {\n      phonebookService\n        .updatePerson(found, newNumber)\n        .then(() => {\n          setPersons(\n            persons.map((p) =>\n              p.name === found.name ? { ...found, number: newNumber } : p\n            )\n          );\n          setMessage({ type: \"success\", content: `Updated ${newName}` });\n        })\n        .catch((e) => setMessage({ type: \"error\", content: e.message }));\n\n      cleanUp();\n    } else {\n      return;\n    }\n  };\n\n  const addPerson = (e) => {\n    e.preventDefault();\n\n    const personObject = {\n      name: newName,\n      number: newNumber,\n    };\n\n    let found = persons.find(\n      (p) => p.name === newName && p.number !== newNumber\n    );\n\n    if (found) {\n      promptAndUpdate(found);\n    } else {\n      phonebookService\n        .createPerson(personObject)\n        .then((data) => {\n          setPersons(persons.concat(data));\n          setMessage({ type: \"success\", content: `Added ${newName}` });\n        })\n        .catch((e) => setMessage({ type: \"error\", content: e.message }));\n\n      cleanUp();\n    }\n  };\n  return (\n    <form onSubmit={addPerson}>\n      <div>\n        name:{\" \"}\n        <input value={newName} onChange={(e) => setNewName(e.target.value)} />\n      </div>\n      <div>\n        number:{\" \"}\n        <input\n          value={newNumber}\n          onChange={(e) => setNewNumber(e.target.value)}\n        />\n      </div>\n      <div>\n        <button type=\"submit\">add</button>\n      </div>\n    </form>\n  );\n};\n\nexport default PersonForm;\n","import phonebookService from \"../services/phonebook\";\n\nconst Person = ({ persons, setPersons, setMessage }) => {\n  const handleDelete = (p) => {\n    if (window.confirm(`Delete ${p.name}`)) {\n      phonebookService\n        .deletePerson(p)\n        .then(() => {\n          setPersons(persons.filter((person) => person.name !== p.name));\n          setMessage({\n            type: \"success\",\n            content: `Deleted ${p.name}`,\n          });\n        })\n        .catch((e) =>\n          setMessage({\n            type: \"error\",\n            content: `Information of ${p.name} has already been removed from server`,\n          })\n        );\n    }\n  };\n\n  return (\n    <>\n      {persons.map((person) => (\n        <p key={person.id}>\n          {person.name} {person.number}{\" \"}\n          <button onClick={() => handleDelete(person)}>delete</button>\n        </p>\n      ))}\n    </>\n  );\n};\nexport default Person;\n","import \"../index.css\";\nimport { useEffect } from \"react\";\n\nconst Message = ({ message, setMessage }) => {\n  useEffect(() => {\n    const timeout = setTimeout(() => {\n      setMessage(\"\");\n    }, 5000);\n\n    return () => clearTimeout(timeout);\n  }, [message, setMessage]);\n\n  if (message && message.content) {\n    return <p className={message.type}>{message.content}</p>;\n  } else {\n    return \"\";\n  }\n};\n\nexport default Message;\n","import React, { useState, useEffect } from \"react\";\nimport Filter from \"./components/Filter\";\nimport PersonForm from \"./components/PersonForm\";\nimport Person from \"./components/Person\";\nimport phonebookService from \"./services/phonebook\";\nimport \"./index.css\";\nimport Message from \"./components/Message\";\n\nconst App = () => {\n  const [persons, setPersons] = useState([]);\n  const [filter, setFilter] = useState(\"\");\n  const [message, setMessage] = useState({ type: \"success\", content: \"\" });\n\n  useEffect(() => {\n    phonebookService\n      .getAllPersons()\n      .then((persons) => setPersons(persons))\n      .catch((e) => setMessage({ type: \"error\", content: e.message }));\n  }, []);\n\n  return (\n    <>\n      <h2>Phonebook</h2>\n      <Message message={message} setMessage={setMessage} />\n      <Filter filter={filter} setFilter={setFilter} />\n\n      <h3>Add a new</h3>\n      <PersonForm\n        persons={persons}\n        setPersons={setPersons}\n        setMessage={setMessage}\n      />\n\n      <h3>Numbers</h3>\n      <Person\n        persons={persons.filter((p) => p.name.toLowerCase().includes(filter))}\n        setPersons={setPersons}\n        setMessage={setMessage}\n      />\n    </>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}